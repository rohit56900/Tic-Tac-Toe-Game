#include <iostream>
using namespace std;

// Initialize the Tic-Tac-Toe board as a 3x3 grid with empty spaces
char board[3][3] = {{' ', ' ', ' '}, {' ', ' ', ' '}, {' ', ' ', ' '}};
char currentPlayer = 'X'; // Initialize the current player as 'X'

// Function to display the current state of the Tic-Tac-Toe board
void displayBoard() {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            cout << board[i][j];
            if (j < 2) cout << " | "; // Separate cells with '|'
        }
        cout << endl;
        if (i < 2) cout << "---------" << endl; // Add horizontal lines between rows
    }
}

// Function to check if a move is valid at the given row and column
bool isMoveValid(int row, int col) {
    // Check if the coordinates are within the board boundaries and if the cell is empty
    if (row < 0 || row >= 3 || col < 0 || col >= 3 || board[row][col] != ' ') {
        return false;
    }
    return true;
}

// Function to check if the game is over (either a player wins or it's a draw)
bool isGameOver() {
    // Check for a win
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ') {
            cout << "Player " << board[i][0] << " wins!" << endl;
            return true;
        }
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[0][i] != ' ') {
            cout << "Player " << board[0][i] << " wins!" << endl;
            return true;
        }
    }
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[0][0] != ' ') {
        cout << "Player " << board[0][0] << " wins!" << endl;
        return true;
    }
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[0][2] != ' ') {
        cout << "Player " << board[0][2] << " wins!" << endl;
        return true;
    }

    // Check for a draw
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] == ' ') {
                return false;
            }
        }
    }

    cout << "Game over! It's a draw." << endl;
    return true;
}

int main() {
    while (!isGameOver()) {
        displayBoard();
        int row, col;
        cout << "Player " << currentPlayer << ", enter row (0, 1, or 2) and column (0, 1, or 2): ";
        cin >> row >> col;

        if (isMoveValid(row, col)) {
            board[row][col] = currentPlayer;
            if (currentPlayer == 'X') {
                currentPlayer = 'O';
            } else {
                currentPlayer = 'X';
            }
        } else {
            cout << "Invalid move. Try again." << endl;
        }
    }

    displayBoard();

    return 0;
}
